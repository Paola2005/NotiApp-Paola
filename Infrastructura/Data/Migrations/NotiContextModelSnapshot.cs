// <auto-generated />
using System;
using Infrastructura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructura.Data.Migrations
{
    [DbContext(typeof(NotiContext))]
    partial class NotiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DescAccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("Core.Entities.BlockChain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AuditoriasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HashGenerado")
                        .HasColumnType("longtext");

                    b.Property<int>("IdAuditoria")
                        .HasColumnType("int");

                    b.Property<int>("IdHiloRespuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdNotificacion")
                        .HasColumnType("int");

                    b.Property<int?>("RespuestasNotificacionesId")
                        .HasColumnType("int");

                    b.Property<int?>("TiposNotificacionesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriasId");

                    b.HasIndex("RespuestasNotificacionesId");

                    b.HasIndex("TiposNotificacionesId");

                    b.ToTable("BlockChains");
                });

            modelBuilder.Entity("Core.Entities.EstadoNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreEstado")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EstadosNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.Formato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreFormato")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Formatos");
                });

            modelBuilder.Entity("Core.Entities.GenericosvsSubModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdGenericos")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdSubModulos")
                        .HasColumnType("int");

                    b.Property<int?>("MaestrosvSubsModulosId")
                        .HasColumnType("int");

                    b.Property<int?>("PermisoGenericoId")
                        .HasColumnType("int");

                    b.Property<int?>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaestrosvSubsModulosId");

                    b.HasIndex("PermisoGenericoId");

                    b.HasIndex("RolesId");

                    b.ToTable("GenericossvSubsModulos");
                });

            modelBuilder.Entity("Core.Entities.MaestrosvSubModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IdSubModulo")
                        .HasColumnType("int");

                    b.Property<int?>("ModuloMaestrosId")
                        .HasColumnType("int");

                    b.Property<int?>("SubsModulosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuloMaestrosId");

                    b.HasIndex("SubsModulosId");

                    b.ToTable("MaestrosvSubsModulos");
                });

            modelBuilder.Entity("Core.Entities.ModuloNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AsuntoNotificacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("EstadosNotificacionesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FormatosId")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoNotificacion")
                        .HasColumnType("int");

                    b.Property<int>("IdFromato")
                        .HasColumnType("int");

                    b.Property<int>("IdHiloRespuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdRadicado")
                        .HasColumnType("int");

                    b.Property<int>("IdRequerimiento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoNotificacion")
                        .HasColumnType("int");

                    b.Property<int?>("RadicadosId")
                        .HasColumnType("int");

                    b.Property<int?>("RespuestasNotificacionesId")
                        .HasColumnType("int");

                    b.Property<string>("TextoNotificacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("TiposNotificacionesId")
                        .HasColumnType("int");

                    b.Property<int?>("TiposRequerimientosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadosNotificacionesId");

                    b.HasIndex("FormatosId");

                    b.HasIndex("RadicadosId");

                    b.HasIndex("RespuestasNotificacionesId");

                    b.HasIndex("TiposNotificacionesId");

                    b.HasIndex("TiposRequerimientosId");

                    b.ToTable("ModulosNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.ModulosMaestros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreModulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ModuloMaestros");
                });

            modelBuilder.Entity("Core.Entities.PermisosGenericos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombrePermiso")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PermisoGenerico");
                });

            modelBuilder.Entity("Core.Entities.Radicado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Radicados");
                });

            modelBuilder.Entity("Core.Entities.RespuestaNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreTipo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RespuestasNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Core.Entities.RolvsMaestro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int?>("ModuloMaestrosId")
                        .HasColumnType("int");

                    b.Property<int?>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuloMaestrosId");

                    b.HasIndex("RolesId");

                    b.ToTable("RolsvsMaestros");
                });

            modelBuilder.Entity("Core.Entities.SubModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreSubModulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SubsModulos");
                });

            modelBuilder.Entity("Core.Entities.TipoNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreTipo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TiposNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.TipoRequerimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreRequerimiento")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TiposRequerimientos");
                });

            modelBuilder.Entity("Core.Entities.BlockChain", b =>
                {
                    b.HasOne("Core.Entities.Auditoria", "Auditorias")
                        .WithMany("BlockChains")
                        .HasForeignKey("AuditoriasId");

                    b.HasOne("Core.Entities.RespuestaNotificacion", "RespuestasNotificaciones")
                        .WithMany("BlockChains")
                        .HasForeignKey("RespuestasNotificacionesId");

                    b.HasOne("Core.Entities.TipoNotificacion", "TiposNotificaciones")
                        .WithMany("BlockChains")
                        .HasForeignKey("TiposNotificacionesId");

                    b.Navigation("Auditorias");

                    b.Navigation("RespuestasNotificaciones");

                    b.Navigation("TiposNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.GenericosvsSubModulos", b =>
                {
                    b.HasOne("Core.Entities.MaestrosvSubModulos", "MaestrosvSubsModulos")
                        .WithMany("GenericossvSubsModulos")
                        .HasForeignKey("MaestrosvSubsModulosId");

                    b.HasOne("Core.Entities.PermisosGenericos", "PermisoGenerico")
                        .WithMany("GenericossvSubsModulos")
                        .HasForeignKey("PermisoGenericoId");

                    b.HasOne("Core.Entities.Rol", "Roles")
                        .WithMany("GenericossvSubsModulos")
                        .HasForeignKey("RolesId");

                    b.Navigation("MaestrosvSubsModulos");

                    b.Navigation("PermisoGenerico");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Core.Entities.MaestrosvSubModulos", b =>
                {
                    b.HasOne("Core.Entities.ModulosMaestros", "ModuloMaestros")
                        .WithMany()
                        .HasForeignKey("ModuloMaestrosId");

                    b.HasOne("Core.Entities.SubModulos", "SubsModulos")
                        .WithMany()
                        .HasForeignKey("SubsModulosId");

                    b.Navigation("ModuloMaestros");

                    b.Navigation("SubsModulos");
                });

            modelBuilder.Entity("Core.Entities.ModuloNotificacion", b =>
                {
                    b.HasOne("Core.Entities.EstadoNotificacion", "EstadosNotificaciones")
                        .WithMany("ModulosNotificaciones")
                        .HasForeignKey("EstadosNotificacionesId");

                    b.HasOne("Core.Entities.Formato", "Formatos")
                        .WithMany("ModulosNotificaciones")
                        .HasForeignKey("FormatosId");

                    b.HasOne("Core.Entities.Radicado", "Radicados")
                        .WithMany("ModulosNotificaciones")
                        .HasForeignKey("RadicadosId");

                    b.HasOne("Core.Entities.RespuestaNotificacion", "RespuestasNotificaciones")
                        .WithMany("ModulosNotificaciones")
                        .HasForeignKey("RespuestasNotificacionesId");

                    b.HasOne("Core.Entities.TipoNotificacion", "TiposNotificaciones")
                        .WithMany("ModulosNotificaciones")
                        .HasForeignKey("TiposNotificacionesId");

                    b.HasOne("Core.Entities.TipoRequerimiento", "TiposRequerimientos")
                        .WithMany("ModulosNotificaciones")
                        .HasForeignKey("TiposRequerimientosId");

                    b.Navigation("EstadosNotificaciones");

                    b.Navigation("Formatos");

                    b.Navigation("Radicados");

                    b.Navigation("RespuestasNotificaciones");

                    b.Navigation("TiposNotificaciones");

                    b.Navigation("TiposRequerimientos");
                });

            modelBuilder.Entity("Core.Entities.RolvsMaestro", b =>
                {
                    b.HasOne("Core.Entities.ModulosMaestros", "ModuloMaestros")
                        .WithMany("RolsvsMaestros")
                        .HasForeignKey("ModuloMaestrosId");

                    b.HasOne("Core.Entities.Rol", "Roles")
                        .WithMany("RolsvsMaestros")
                        .HasForeignKey("RolesId");

                    b.Navigation("ModuloMaestros");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Core.Entities.Auditoria", b =>
                {
                    b.Navigation("BlockChains");
                });

            modelBuilder.Entity("Core.Entities.EstadoNotificacion", b =>
                {
                    b.Navigation("ModulosNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.Formato", b =>
                {
                    b.Navigation("ModulosNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.MaestrosvSubModulos", b =>
                {
                    b.Navigation("GenericossvSubsModulos");
                });

            modelBuilder.Entity("Core.Entities.ModulosMaestros", b =>
                {
                    b.Navigation("RolsvsMaestros");
                });

            modelBuilder.Entity("Core.Entities.PermisosGenericos", b =>
                {
                    b.Navigation("GenericossvSubsModulos");
                });

            modelBuilder.Entity("Core.Entities.Radicado", b =>
                {
                    b.Navigation("ModulosNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.RespuestaNotificacion", b =>
                {
                    b.Navigation("BlockChains");

                    b.Navigation("ModulosNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Navigation("GenericossvSubsModulos");

                    b.Navigation("RolsvsMaestros");
                });

            modelBuilder.Entity("Core.Entities.TipoNotificacion", b =>
                {
                    b.Navigation("BlockChains");

                    b.Navigation("ModulosNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.TipoRequerimiento", b =>
                {
                    b.Navigation("ModulosNotificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
